{% extends 'base.twig' %}

{% block title %}Sign Up - TicketApp{% endblock %}

{% block content %}
<div class="min-h-screen bg-gradient-to-br from-primary-50 via-white to-primary-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <!-- Decorative Circles -->
    <div class="absolute">
        <div class="absolute top-20 left-10 w-20 h-20 bg-primary-200 rounded-full opacity-60 float"></div>
        <div class="absolute top-40 right-20 w-16 h-16 bg-warning-200 rounded-full opacity-50 float" style="animation-delay: 1s"></div>
        <div class="absolute bottom-40 left-1/4 w-12 h-12 bg-success-200 rounded-full opacity-40 float" style="animation-delay: 2s"></div>
    </div>
    
    <div class="max-w-md w-full space-y-8 relative z-10">
        <div class="text-center">
            <a href="./index.html" class="text-3xl font-bold text-primary-600">TicketApp</a>
            <h2 class="mt-6 text-3xl font-bold text-gray-900">Create your account</h2>
            <p class="mt-2 text-sm text-gray-600">
                Or <a href="./login.html" class="font-medium text-primary-600 hover:text-primary-500 transition-colors">sign in to your existing account</a>
            </p>
        </div>

        <div class="card">
            <form class="space-y-6" id="signupForm">
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Full name</label>
                    <input type="text" id="name" name="name" required class="input-field" placeholder="Enter your full name">
                    <p id="name-error" class="mt-1 text-sm text-danger-600 hidden"></p>
                </div>

                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email address</label>
                    <input type="email" id="email" name="email" required class="input-field" placeholder="Enter your email">
                    <p id="email-error" class="mt-1 text-sm text-danger-600 hidden"></p>
                </div>

                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                    <input type="password" id="password" name="password" required class="input-field" placeholder="Create a password">
                    <p id="password-error" class="mt-1 text-sm text-danger-600 hidden"></p>
                </div>

                <div>
                    <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">Confirm password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" required class="input-field" placeholder="Confirm your password">
                    <p id="confirmPassword-error" class="mt-1 text-sm text-danger-600 hidden"></p>
                </div>

                <div class="flex items-center">
                    <input id="agree-terms" name="agree-terms" type="checkbox" required class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded">
                    <label for="agree-terms" class="ml-2 block text-sm text-gray-900">
                        I agree to the <a href="#" class="text-primary-600 hover:text-primary-500 transition-colors">Terms of Service</a> and <a href="#" class="text-primary-600 hover:text-primary-500 transition-colors">Privacy Policy</a>
                    </label>
                </div>

                <div>
                    <button type="submit" class="btn-primary w-full disabled:opacity-50 disabled:cursor-not-allowed" id="submitBtn">
                        <span id="submitText">Create account</span>
                        <div id="loadingSpinner" class="hidden flex items-center justify-center">
                            <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                            Creating account...
                        </div>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script type="module">
    import { auth } from './js/auth.js';
    
    const form = document.getElementById('signupForm');
    const submitBtn = document.getElementById('submitBtn');
    const submitText = document.getElementById('submitText');
    const loadingSpinner = document.getElementById('loadingSpinner');
    
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const name = document.getElementById('name').value;
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        
        const errors = validateSignupForm(name, email, password, confirmPassword);
        displayErrors(errors);
        
        if (Object.keys(errors).length === 0) {
            submitBtn.disabled = true;
            submitText.classList.add('hidden');
            loadingSpinner.classList.remove('hidden');
            
            const success = await auth.signup(name, email, password);
            
            if (success) {
                setTimeout(() => {
                    window.location.href = './dashboard.html';
                }, 100);
            } else {
                submitBtn.disabled = false;
                submitText.classList.remove('hidden');
                loadingSpinner.classList.add('hidden');
            }
        }
    });
    
    function displayErrors(errors) {
        Object.keys(errors).forEach(key => {
            const errorEl = document.getElementById(`${key}-error`);
            if (errorEl) {
                errorEl.textContent = errors[key];
                errorEl.classList.remove('hidden');
            }
        });
        
        setTimeout(() => {
            document.querySelectorAll('[id$="-error"]').forEach(el => {
                el.classList.add('hidden');
                el.textContent = '';
            });
        }, 5000);
    }
    
    function validateSignupForm(name, email, password, confirmPassword) {
        const errors = {};
        
        if (!name.trim()) {
            errors.name = 'Name is required';
        } else if (name.trim().length < 2) {
            errors.name = 'Name must be at least 2 characters';
        }
        
        if (!email.trim()) {
            errors.email = 'Email is required';
        } else if (!/\S+@\S+\.\S+/.test(email)) {
            errors.email = 'Email is invalid';
        }
        
        if (!password.trim()) {
            errors.password = 'Password is required';
        } else if (password.length < 6) {
            errors.password = 'Password must be at least 6 characters';
        }
        
        if (!confirmPassword.trim()) {
            errors.confirmPassword = 'Please confirm your password';
        } else if (password !== confirmPassword) {
            errors.confirmPassword = 'Passwords do not match';
        }
        
        return errors;
    }
</script>
{% endblock %}

